version: '3.8'

services:
  api:
    build: .
    container_name: weather_api
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - redis
    volumes:
      - ./weather_data:/app/weather_data
    environment:
      - API_KEYS=${API_KEYS:-your_api_key_1,your_api_key_2}
      - REDIS_URL=redis://redis:6379/0
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    command: [ "gunicorn", "-b", "0.0.0.0:5000", "--workers=4", "--threads=2", "app:app" ]

  redis:
    image: redis:alpine
    container_name: weather_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  celery_worker:
    build: .
    container_name: weather_celery
    restart: always
    depends_on:
      - redis
    volumes:
      - ./weather_data:/app/weather_data
    environment:
      - API_KEYS=${API_KEYS:-your_api_key_1,your_api_key_2}
      - REDIS_URL=redis://redis:6379/0
    command: [ "celery", "-A", "tasks", "worker", "--loglevel=info", "--concurrency=4" ]
    healthcheck:
      test: [ "CMD", "celery", "-A", "tasks", "inspect", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  redis_data: